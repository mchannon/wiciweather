/**
 * Ensure that there is some level of content and not just a bunch of empty divs, spans, etc (deep search)
 *
 * @since v1.0.0
 * @param {any} component - A component, array of components, or content of a component
 * @param {NoEmptyConfig} [config={ ignore: [], rejectCustom: true, rejectEmptyCustom: false }] - Configuration options for custom components
 * @returns {boolean} - Whether or not there is content provided. true = content is provided as children at some depth; false = no content is provided as children at any depth
 * @example
 * // Ensure that one of the following is true at some level of depth for the children:
 * //   * There is markup with content
 * //   * A 'CustomComponent' is provided
 * //   * A different custom component that has children
 *
 * noEmptyChildrenDeep(component, { ignore: ['CustomComponent'], rejectCustom: false, rejectEmptyCustom: true })
 */
export declare const noEmptyChildrenDeep: (component: any, { ignore, rejectCustom, rejectEmptyCustom }?: NoEmptyConfig) => boolean;
export declare type NoEmptyConfig = {
    ignore?: string[];
    rejectCustom?: boolean;
    rejectEmptyCustom?: boolean;
};
