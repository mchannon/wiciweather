import * as React from 'react';
import { IDescendantDepth } from '../types';
/**
 * Gets the depth to the first descendant (or self) of each root child that match the specified predicate
 *
 * @since v2.6.0
 * @template T
 * @template TC - Type of child
 * @param {T} children - JSX children
 * @param {(child: T) => boolean} predicate - The predicate to determine if the given child is a match
 * @returns {IDescendantDepth<T>[]} - The oldest ancestor with the depth to the matching descendant
 */
export declare const getDescendantDepth: <T = React.ReactNode, TC = React.ReactNode>(children: T, predicate: (child: TC) => boolean) => IDescendantDepth<TC>[];
