{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport * as React from 'react';\nimport { getChildDeep } from '../getChild';\n/**\r\n * Gets all children by specified predicate or that have a descendant node in their lineage which matches the predicate\r\n *\r\n * @since v2.6.0\r\n * @template T\r\n * @template TC - Type of child\r\n * @param {T} children - JSX children\r\n * @param {(child: TC) => boolean} predicate - The predicate to determine if the given child is a match\r\n * @returns {TC[]} - All children that match the predicate or have a descendant which matches the predicate\r\n */\n\nexport var getChildrenWithDescendant = function (children, predicate) {\n  var _children = React.Children.toArray(children);\n\n  var output = [];\n\n  for (var _i = 0, _children_1 = _children; _i < _children_1.length; _i++) {\n    var child = _children_1[_i];\n\n    if (getChildDeep(child, predicate)) {\n      output = __spreadArray(__spreadArray([], output), [child]);\n    }\n  }\n\n  return output;\n};","map":{"version":3,"sources":["/Users/brandi/wiciweather/node_modules/react-nanny/lib/es6/getChildrenWithDescendant/index.js"],"names":["__spreadArray","to","from","i","il","length","j","React","getChildDeep","getChildrenWithDescendant","children","predicate","_children","Children","toArray","output","_i","_children_1","child"],"mappings":"AAAA,IAAIA,aAAa,GAAI,QAAQ,KAAKA,aAAd,IAAgC,UAAUC,EAAV,EAAcC,IAAd,EAAoB;AACpE,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGF,IAAI,CAACG,MAArB,EAA6BC,CAAC,GAAGL,EAAE,CAACI,MAAzC,EAAiDF,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIG,CAAC,EAA/D,EACIL,EAAE,CAACK,CAAD,CAAF,GAAQJ,IAAI,CAACC,CAAD,CAAZ;;AACJ,SAAOF,EAAP;AACH,CAJD;;AAKA,OAAO,KAAKM,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,yBAAyB,GAAG,UAAUC,QAAV,EAAoBC,SAApB,EAA+B;AAClE,MAAIC,SAAS,GAAGL,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBJ,QAAvB,CAAhB;;AACA,MAAIK,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,WAAW,GAAGL,SAA/B,EAA0CI,EAAE,GAAGC,WAAW,CAACZ,MAA3D,EAAmEW,EAAE,EAArE,EAAyE;AACrE,QAAIE,KAAK,GAAGD,WAAW,CAACD,EAAD,CAAvB;;AACA,QAAIR,YAAY,CAACU,KAAD,EAAQP,SAAR,CAAhB,EAAoC;AAChCI,MAAAA,MAAM,GAAGf,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKe,MAAL,CAAd,EAA4B,CAACG,KAAD,CAA5B,CAAtB;AACH;AACJ;;AACD,SAAOH,MAAP;AACH,CAVM","sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nimport * as React from 'react';\r\nimport { getChildDeep } from '../getChild';\r\n/**\r\n * Gets all children by specified predicate or that have a descendant node in their lineage which matches the predicate\r\n *\r\n * @since v2.6.0\r\n * @template T\r\n * @template TC - Type of child\r\n * @param {T} children - JSX children\r\n * @param {(child: TC) => boolean} predicate - The predicate to determine if the given child is a match\r\n * @returns {TC[]} - All children that match the predicate or have a descendant which matches the predicate\r\n */\r\nexport var getChildrenWithDescendant = function (children, predicate) {\r\n    var _children = React.Children.toArray(children);\r\n    var output = [];\r\n    for (var _i = 0, _children_1 = _children; _i < _children_1.length; _i++) {\r\n        var child = _children_1[_i];\r\n        if (getChildDeep(child, predicate)) {\r\n            output = __spreadArray(__spreadArray([], output), [child]);\r\n        }\r\n    }\r\n    return output;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}