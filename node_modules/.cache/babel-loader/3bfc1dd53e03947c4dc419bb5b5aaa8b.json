{"ast":null,"code":"var _jsxFileName = \"/Users/brandi/wiciweather/src/components/Current.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { WeatherContext } from '../context';\nimport { Box, Flex, Spacer, Stack, StackDivider, Text } from '@chakra-ui/layout';\nimport { Image } from '@chakra-ui/image';\nimport { Button, ButtonGroup } from '@chakra-ui/button';\nimport { useColorModeValue } from '@chakra-ui/color-mode';\nimport { getFullDate } from '../helpers/getDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Temparature = () => {\n  _s();\n\n  const {\n    isCelsius,\n    setIsCelsius,\n    state: {\n      current,\n      forecast\n    }\n  } = useContext(WeatherContext);\n  const date = getFullDate(); // Light mode | Dark mode style\n\n  const color = useColorModeValue('gray.600', 'gray.400');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n  const temparature = current[isCelsius ? 'temp_c' : 'temp_f'];\n  const minTemp = forecast[0].day[isCelsius ? 'mintemp_c' : 'mintemp_f'];\n  const maxTemp = forecast[0].day[isCelsius ? 'maxtemp_c' : 'maxtemp_f'];\n  const conditionText = current.condition.text;\n  const conditionIcon = current.condition.icon;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    lineHeight: \"shorter\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"space-between\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"2xl\",\n          fontWeight: \"medium\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"sm\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        spacing: 0,\n        variant: \"checked\",\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          borderLeftRadius: \"md\",\n          isActive: isCelsius,\n          onClick: () => {\n            setIsCelsius(true);\n          },\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          borderRightRadius: \"md\",\n          isActive: !isCelsius,\n          onClick: () => {\n            setIsCelsius(false);\n          },\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"6xl\",\n          fontWeight: \"semibold\",\n          lineHeight: \"shorter\",\n          children: [temparature, /*#__PURE__*/_jsxDEV(Text, {\n            as: \"span\",\n            fontWeight: \"normal\",\n            children: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        boxSize: \"100px\",\n        src: conditionIcon,\n        alt: \"weather condition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"row\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        divider: /*#__PURE__*/_jsxDEV(StackDivider, {\n          borderColor: borderColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this),\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: color,\n          children: [minTemp, /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"normal\",\n            as: \"span\",\n            children: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [maxTemp, /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"normal\",\n            as: \"span\",\n            children: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        minW: \"100px\",\n        textAlign: \"center\",\n        casing: \"capitalize\",\n        children: conditionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Temparature, \"dVEtDXUoq4Vbs2qxgf4AXHWdG+Q=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n\n_c = Temparature;\nexport default Temparature;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temparature\");","map":{"version":3,"sources":["/Users/brandi/wiciweather/src/components/Current.jsx"],"names":["React","useContext","WeatherContext","Box","Flex","Spacer","Stack","StackDivider","Text","Image","Button","ButtonGroup","useColorModeValue","getFullDate","Temparature","isCelsius","setIsCelsius","state","current","forecast","date","color","borderColor","temparature","minTemp","day","maxTemp","conditionText","condition","text","conditionIcon","icon"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { WeatherContext } from '../context';\nimport {\n  Box,\n  Flex,\n  Spacer,\n  Stack,\n  StackDivider,\n  Text,\n} from '@chakra-ui/layout';\nimport { Image } from '@chakra-ui/image';\nimport { Button, ButtonGroup } from '@chakra-ui/button';\nimport { useColorModeValue } from '@chakra-ui/color-mode';\nimport { getFullDate } from '../helpers/getDate';\n\nconst Temparature = () => {\n  const {\n    isCelsius,\n    setIsCelsius,\n    state: { current, forecast },\n  } = useContext(WeatherContext);\n\n  const date = getFullDate();\n\n  // Light mode | Dark mode style\n  const color = useColorModeValue('gray.600', 'gray.400');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  const temparature = current[isCelsius ? 'temp_c' : 'temp_f'];\n  const minTemp = forecast[0].day[isCelsius ? 'mintemp_c' : 'mintemp_f'];\n  const maxTemp = forecast[0].day[isCelsius ? 'maxtemp_c' : 'maxtemp_f'];\n  const conditionText = current.condition.text;\n  const conditionIcon = current.condition.icon;\n\n  return (\n    <Box lineHeight=\"shorter\">\n      <Flex justify=\"space-between\" align=\"center\">\n        <Stack>\n          <Text fontSize=\"2xl\" fontWeight=\"medium\">\n            Today\n          </Text>\n          <Text fontSize=\"sm\">{date}</Text>\n        </Stack>\n        <ButtonGroup spacing={0} variant=\"checked\" size=\"sm\">\n          <Button\n            borderLeftRadius=\"md\"\n            isActive={isCelsius}\n            onClick={() => {\n              setIsCelsius(true);\n            }}\n          >\n            &#176;C\n          </Button>\n          <Button\n            borderRightRadius=\"md\"\n            isActive={!isCelsius}\n            onClick={() => {\n              setIsCelsius(false);\n            }}\n          >\n            &#176;F\n          </Button>\n        </ButtonGroup>\n      </Flex>\n      <Flex align=\"center\">\n        <Stack>\n          <Text fontSize=\"6xl\" fontWeight=\"semibold\" lineHeight=\"shorter\">\n            {temparature}\n            <Text as=\"span\" fontWeight=\"normal\">\n              &#176;\n            </Text>\n          </Text>\n        </Stack>\n        <Spacer />\n        <Image boxSize=\"100px\" src={conditionIcon} alt=\"weather condition\" />\n      </Flex>\n      <Flex direction=\"row\" justify=\"space-between\">\n        <Stack\n          direction=\"row\"\n          divider={<StackDivider borderColor={borderColor} />}\n          spacing={2}\n        >\n          <Text color={color}>\n            {minTemp}\n            <Text fontWeight=\"normal\" as=\"span\">\n              &#176;\n            </Text>\n          </Text>\n          <Text>\n            {maxTemp}\n            <Text fontWeight=\"normal\" as=\"span\">\n              &#176;\n            </Text>\n          </Text>\n        </Stack>\n        <Text minW=\"100px\" textAlign=\"center\" casing=\"capitalize\">\n          {conditionText}\n        </Text>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Temparature;\n"]},"metadata":{},"sourceType":"module"}